*,
*::after,
*::before {
  /*Universal Selector */
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* inherit from the body */ }

html {
  font-size: 62.5%;
  /* Easy for calculations if we set root to 10px instead of 16px, normally 62.5% eqauals to 10px */ }

body {
  box-sizing: border-box;
  /* Borders and padding are not added default with this property */ }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem) rotate(0deg); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* when we rotate an item, back part won't be visible */
  margin-bottom: 5rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-in-out;
    /* Animation will start slower and stop slower */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    text-align: center;
    animation: moveInRight 2s ease-in-out; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /* Otherwise this will be override on top of some other elements */
  border-radius: 10rem;
  transition: all 0.2s;
  /* Animations in a simple method */
  position: relative;
  font-size: 1.6rem; }

.btn:focus {
  border: 4px; }

.btn:hover {
  transform: translateY(-f3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-1px);
  /* Active means on click state */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: white; }

.btn::after {
  content: "";
  /* Must add this, otherwise won't be visible */
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
  /* animation styles will apply before animations start */ }

.header {
  height: 95vh;
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  /*fit element into viewport*/
  background-position: top;
  /*cut image from bottom*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
  /* otherwise logo__box won't get positiond as needed */ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem;
    /* with auto assigns */ }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* this is how we center with absolute positioning */
    text-align: center; }
